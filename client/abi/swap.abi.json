[
    {
        "type": "impl",
        "name": "SwapImpl",
        "interface_name": "bankai_contract::contracts::swap::ISwapStrat"
    },
    {
        "type": "struct",
        "name": "core::integer::u256",
        "members": [
            {
                "name": "low",
                "type": "core::integer::u128"
            },
            {
                "name": "high",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "struct",
        "name": "bankai_contract::storage::data_modal::SwapFees",
        "members": [
            {
                "name": "input_fee",
                "type": "core::integer::u256"
            },
            {
                "name": "output_fee",
                "type": "core::integer::u256"
            }
        ]
    },
    {
        "type": "struct",
        "name": "bankai_contract::storage::data_modal::LST",
        "members": [
            {
                "name": "lst_id",
                "type": "core::integer::u256"
            },
            {
                "name": "token_address",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "fees",
                "type": "bankai_contract::storage::data_modal::SwapFees"
            }
        ]
    },
    {
        "type": "interface",
        "name": "bankai_contract::contracts::swap::ISwapStrat",
        "items": [
            {
                "type": "function",
                "name": "swap",
                "inputs": [
                    {
                        "name": "from_add",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "to_add",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "from_amt",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "get_LST_data",
                "inputs": [
                    {
                        "name": "token",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "bankai_contract::storage::data_modal::LST"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "get_amt_after_fee",
                "inputs": [
                    {
                        "name": "from_val",
                        "type": "core::integer::u256"
                    },
                    {
                        "name": "input_fee",
                        "type": "core::integer::u256"
                    },
                    {
                        "name": "output_fee",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "(core::integer::u256, core::integer::u256)"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "add_lst",
                "inputs": [
                    {
                        "name": "lst_address",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "total_liquidity",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "set_fees",
                "inputs": [
                    {
                        "name": "lst_address",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "init_pool_creation",
                "inputs": [
                    {
                        "name": "token_amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "impl",
        "name": "OwnableTwoStepImpl",
        "interface_name": "openzeppelin::access::ownable::interface::IOwnableTwoStep"
    },
    {
        "type": "interface",
        "name": "openzeppelin::access::ownable::interface::IOwnableTwoStep",
        "items": [
            {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "pending_owner",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "accept_ownership",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "transfer_ownership",
                "inputs": [
                    {
                        "name": "new_owner",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "renounce_ownership",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "fee_constant",
                "type": "core::integer::u256"
            },
            {
                "name": "fee_collector",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "min_liquidity",
                "type": "core::integer::u256"
            },
            {
                "name": "max_liquidity",
                "type": "core::integer::u256"
            },
            {
                "name": "lst_data",
                "type": "core::array::Array::<bankai_contract::storage::data_modal::LST>"
            },
            {
                "name": "lst_addresses",
                "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
        "kind": "enum",
        "variants": []
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "struct",
        "members": [
            {
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "struct",
        "members": [
            {
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "OwnershipTransferred",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
                "kind": "nested"
            },
            {
                "name": "OwnershipTransferStarted",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "bankai_contract::contracts::swap::Swap::Swap",
        "kind": "struct",
        "members": [
            {
                "name": "from_add",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "to_add",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "from_amt",
                "type": "core::integer::u256",
                "kind": "data"
            },
            {
                "name": "to_amt",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "bankai_contract::contracts::swap::Swap::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "ReentrancyGuardEvent",
                "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
                "kind": "flat"
            },
            {
                "name": "OwnableEvent",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
                "kind": "flat"
            },
            {
                "name": "Swap",
                "type": "bankai_contract::contracts::swap::Swap::Swap",
                "kind": "nested"
            }
        ]
    }
]